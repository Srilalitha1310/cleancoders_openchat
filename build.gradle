plugins {
	id "org.springframework.boot" version "2.2.0.RELEASE"
	id "io.spring.dependency-management" version "1.0.8.RELEASE"
	id "java"
}

group = "it.generali.dojo"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "1.8"

repositories {
	mavenCentral()
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output
			runtimeClasspath += main.output
			srcDir file("src/test-integration/java")
		}
		resources.srcDir file("src/test-integration/resources")
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
	implementation "com.eclipsesource.minimal-json:minimal-json:0.9.4"
	implementation "org.apache.commons:commons-lang3:3.6"
	implementation "org.springframework.boot:spring-boot-starter-web"

	testImplementation "org.hamcrest:java-hamcrest:2.0.0.0"
	testImplementation("org.springframework.boot:spring-boot-starter-test") {
		exclude group: "org.junit.vintage", module: "junit-vintage-engine"
	}

	integrationTestImplementation "io.rest-assured:rest-assured:3.0.5"
}

task integrationTest(type: Test) {
	useJUnitPlatform()
	testLogging {
		exceptionFormat = "full"
		showStackTraces = true
	}
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

test {
	useJUnitPlatform()
	testLogging {
		exceptionFormat = "full"
		showStackTraces = true
		events "passed", "failed"//, "skipped", "standardOut", "standardError"
	}
}
